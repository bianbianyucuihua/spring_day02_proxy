<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
   <context:component-scan base-package="com.hongyi.dao">
   </context:component-scan>
    <!--读取配置文件中的连接信息-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxActive" value="${jdbc.MaxActive}"></property>
        <property name="minIdle" value="${jdbc.MinIdle}"></property>
    </bean>
    <!--配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:SqlMapConfig.xml"></property>
        <property name="mapperLocations" value="classpath:mappers/UserDao.xml"></property>
    </bean>
    <!--扫描包，自动使用sqlSessionFactory，来创建代理对象-->
   <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hongyi.dao"></property>
    </bean>

    <!--redis-->
    <!--配置redis的连接信息-->
    <bean id="configuration" class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
        <property name="hostName" value="${redis.ip}"></property>
        <property name="port" value="${redis.port}"></property>
    </bean>
    <!--配置redis连接工厂-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="standaloneConfig" ref="configuration"></constructor-arg>
    </bean>

    <!--配置jackson序列化-->
    <bean name="jackson2JsonRedisSerializer"
          class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer">
        <constructor-arg name="type" value="#{T(java.lang.Object)}"/>
        <property name="objectMapper" value="#{T(com.hongyi.util.ObjectMapperFactory).objectMapper}"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"></property>
        <property name="keySerializer" ref="jackson2JsonRedisSerializer"></property>
        <property name="valueSerializer" ref="jackson2JsonRedisSerializer"></property>
        <property name="hashKeySerializer" ref="jackson2JsonRedisSerializer"></property>
        <property name="hashValueSerializer" ref="jackson2JsonRedisSerializer"></property>
    </bean>

</beans>